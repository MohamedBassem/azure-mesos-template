{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json# ",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name Prefix for the Storage Account where the Virtual Machine's disks will be placed.  StorageAccounts may contain at most variables('vmsPerStorageAccount')"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "agentVMSize": {
      "type": "string",
      "metadata": {
        "description": "The VM role size of the agent node(s)"
      }
    },
    "agentCount": {
      "type": "int",
      "metadata": {
        "description": "The count of agent nodes"
      }
    },
    "masterCount": {
      "type": "int",
      "metadata": {
        "description": "The count of master nodes"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The network subnet"
      }
    },
    "subnetRef": {
      "type": "string",
      "metadata": {
        "description": "The network subnet reference"
      }
    },
    "agentFirstAddr": {
      "type": "int",
      "metadata": {
        "description": "The value of the 4th IPv4 octet of the first agent within the subnet"
      }
    },
    "masterVMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The vm name prefix of the master"
      }
    },
    "agentVMNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The vm name prefix of the agent"
      }
    },
    "osImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The publisher name to identify the OS image."
      }
    },
    "osImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer name to identify the OS image."
      }
    },
    "osImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The sku to identify the OS image."
      }
    },
    "osImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The version to identify the OS image."
      }
    },
    "customScriptLocation": {
      "type": "string",
      "metadata": {
        "description": "The github location for the shell scripts."
      }
    },
    "swarmEnabled": {
      "type": "string",
      "metadata": {
        "description": "Flag for enabling the Docker Swarm framework."
      }
    },
    "marathonEnabled": {
      "type": "string",
      "metadata": {
        "description": "Flag for enabling the Marathon framework."
      }
    },
    "chronosEnabled": {
      "type": "string",
      "metadata": {
        "description": "Flag for enabling the Chronos framework."
      }
    },
    "omsStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "The storage account for OMS log data."
      }
    },
    "omsStorageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "The storage account primary or secondary key for OMS log data."
      }
    }
  },
  "variables": {
    "scaleSetName": "scaleSet",
    "virtualNetworkName": "VNET",
    "subnetName": "Subnet",
    "vmsPerStorageAccount": 15,
    "storageAccountsCount": "[add(div(parameters('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(parameters('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(parameters('agentCount'), variables('vmsPerStorageAccount')),1)))]",
    "storageAccountType": "Standard_GRS",
    "wgetCommandPrefix": "[concat('wget --tries 20 --retry-connrefused --waitretry=15 -qO- ', parameters('customScriptLocation'), 'configure-mesos-cluster.sh | nohup /bin/bash -s ')]",
    "wgetCommandPostfix":  " >> /var/log/azure/cluster-bootstrap.log 2>&1 &'",
    "commandPrefix": "/bin/bash -c '"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountNamePrefix')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('storageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('scaleSetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountNamePrefix'))]"
      ],
      "sku": {
        "name": "[parameters('agentVMSize')]",
        "tier": "Standard",
        "capacity": "[parameters('agentCount')]"
      },
      "properties": {
        "upgradePolicy": {
           "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', parameters('newStorageAccountNamePrefix'), '.blob.core.windows.net/vmss')]"
               ],
               "name": "vmssosdisk",
               "caching": "ReadOnly",
               "createOption": "FromImage"
              },
              "imageReference": {
                "publisher": "[parameters('osImagePublisher')]",
                "offer": "[parameters('osImageOffer')]",
                "sku": "[parameters('osImageSKU')]",
                "version": "[parameters('osImageVersion')]"
              }
            },
           "osProfile": {
              "computernamePrefix": "[parameters('agentVMNamePrefix')]",
             "adminUsername": "[parameters('adminUsername')]",
             "adminPassword": "[parameters('adminPassword')]"
           },
           "networkProfile": {
              "networkInterfaceConfigurations": [
              {
                 "name": "[variables('scaleSetName')]",
                "properties": {
                   "ipConfigurations": [
                   {
                     "name": "[variables('scaleSetName')]",
                       "properties": {
                         "subnet": {
                           "Id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                         }
                       }
                    }
                    ]
                 }
               }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
      "name": "[concat(variables('scaleSetName'), '/configureagent')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
	        	"[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('scaleSetName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.3",
        "settings": {
          "fileUris": [],
          "commandToExecute": "[concat(variables('commandPrefix'), variables('wgetCommandPrefix'), parameters('masterCount'), ' slaveconfiguration ', parameters('masterVMNamePrefix'), ' ', parameters('swarmEnabled'), ' ', parameters('marathonEnabled'), ' ', parameters('chronosEnabled'), ' ', parameters('omsStorageAccount'), ' ', parameters('omsStorageAccountKey'), variables('wgetCommandPostfix'))]"
        }
      }
    }
  ]
}
