{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "newStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Globally Unique DNS Name Prefix for the Storage Account where the Virtual Machine's disks will be placed.  An integer will be appended to the end.  StorageAccounts may contain at most variables('vmsPerStorageAccount')"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsNameForContainerServicePublicIP": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the container service.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "metadata": {
        "description": "The number of Mesos agents for the cluster."
      }
    },
    "masterCount": {
      "type": "int",
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "masterConfiguration": {
      "type": "string",
      "defaultValue": "masters-are-agents",
      "allowedValues": [
        "masters-are-agents",
        "masters-are-not-agents"
      ],
      "metadata": {
        "description": "Specify whether masters should act as agents or not."
      }
    },
    "agentVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "masterVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine for the master."
      }
    },
    "clusterPrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix to identify the cluster."
      }
    },
    "swarmEnabled": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "true",
        "false"
      ],
      "metadata": {
        "description": "Flag for enabling the Docker Swarm framework."
      }
    },
    "marathonEnabled": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "true",
        "false"
      ],
      "metadata": {
        "description": "Flag for enabling the Marathon framework."
      }
    },
    "chronosEnabled": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "true",
        "false"
      ],
      "metadata": {
        "description": "Flag for enabling the Chronos framework."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "Configure all linux machines with the SSH rsa public key string.  Use 'disabled' to not configure access with SSH rsa public key."
      }
    }
  },
  "variables": {
    "newStorageAccountNamePrefix": "[tolower(parameters('newStorageAccountNamePrefix'))]",
    "masterVMNamePrefix": "[concat(parameters('clusterPrefix'),'master')]",
    "agentVMNamePrefix": "[concat(parameters('clusterPrefix'),'agent')]",
    "osImagePublisher": "Canonical",
    "osImageOffer": "UbuntuServer",
    "osImageSKU": "14.04.3-LTS",
    "osImageVersion": "latest",
    "virtualNetworkName": "VNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetName": "Subnet",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/18",
    "masterFirstAddr": 5,
    "agentFirstAddr": 50,
    "nsgName": "node-nsg",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "storageAccountType": "Standard_GRS",
    "customScriptLocation": "https://raw.githubusercontent.com/MohamedBassem/azure-rconsole-template/master/",
    "agentFiles": [
      "agent-0.json",
      "agent-gt0.json"
    ],
    "agentFile": "[variables('agentFiles')[mod(add(parameters('agentCount'),2),add(parameters('agentCount'),1))]]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('newStorageAccountNamePrefix'),'0')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp",
            "properties": {
              "description": "RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "rconsole",
            "properties": {
              "description": "Rconsole port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5050",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "createMasterNodes",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountNamePrefix'), '0')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('customScriptLocation'), 'master.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "newStorageAccountName": {
            "value": "[concat(variables('newStorageAccountNamePrefix'), '0')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "dnsNameForContainerServicePublicIP": {
            "value": "[tolower(parameters('dnsNameForContainerServicePublicIP'))]"
          },
          "masterVMSize": {
            "value": "[parameters('masterVMSize')]"
          },
          "masterCount": {
            "value": "[parameters('masterCount')]"
          },
          "masterConfiguration": {
            "value": "[parameters('masterConfiguration')]"
          },
          "subnetPrefix": {
            "value": "[variables('subnetPrefix')]"
          },
          "subnetRef": {
            "value": "[variables('subnetRef')]"
          },
          "masterFirstAddr": {
            "value": "[variables('masterFirstAddr')]"
          },
          "masterVMNamePrefix": {
            "value": "[variables('masterVMNamePrefix')]"
          },
          "osImagePublisher": {
            "value": "[variables('osImagePublisher')]"
          },
          "osImageOffer": {
            "value": "[variables('osImageOffer')]"
          },
          "osImageSKU": {
            "value": "[variables('osImageSKU')]"
          },
          "osImageVersion": {
            "value": "[variables('osImageVersion')]"
          },
          "customScriptLocation": {
            "value": "[variables('customScriptLocation')]"
          },
          "swarmEnabled": {
            "value": "[parameters('swarmEnabled')]"
          },
          "marathonEnabled": {
            "value": "[parameters('marathonEnabled')]"
          },
          "chronosEnabled": {
            "value": "[parameters('chronosEnabled')]"
          },
          "sshRSAPublicKey": {
            "value": "[parameters('sshRSAPublicKey')]"
          },
          "omsStorageAccount": {
            "value": "[variables('omsStorageAccount')]"
          },
          "omsStorageAccountKey": {
            "value": "[variables('omsStorageAccountKey')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "createAgents",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('customScriptLocation'), variables('agentFile'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "newStorageAccountNamePrefix": {
            "value": "[concat(variables('newStorageAccountNamePrefix'))]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "agentVMSize": {
            "value": "[parameters('agentVMSize')]"
          },
          "agentCount": {
            "value": "[parameters('agentCount')]"
          },
          "masterCount": {
            "value": "[parameters('masterCount')]"
          },
          "subnetPrefix": {
            "value": "[variables('subnetPrefix')]"
          },
          "subnetRef": {
            "value": "[variables('subnetRef')]"
          },
          "agentFirstAddr": {
            "value": "[variables('agentFirstAddr')]"
          },
          "masterVMNamePrefix": {
            "value": "[variables('masterVMNamePrefix')]"
          },
          "agentVMNamePrefix": {
            "value": "[variables('agentVMNamePrefix')]"
          },
          "osImagePublisher": {
            "value": "[variables('osImagePublisher')]"
          },
          "osImageOffer": {
            "value": "[variables('osImageOffer')]"
          },
          "osImageSKU" : {
            "value": "[variables('osImageSKU')]"
          },
          "osImageVersion" : {
            "value": "[variables('osImageVersion')]"
          },
          "customScriptLocation": {
            "value": "[variables('customScriptLocation')]"
          },
          "swarmEnabled": {
            "value": "[parameters('swarmEnabled')]"
          },
          "marathonEnabled": {
            "value": "[parameters('marathonEnabled')]"
          },
          "chronosEnabled": {
            "value": "[parameters('chronosEnabled')]"
          },
          "sshRSAPublicKey": {
            "value": "[parameters('sshRSAPublicKey')]"
          },
          "omsStorageAccount": {
            "value": "[variables('omsStorageAccount')]"
          },
          "omsStorageAccountKey": {
            "value": "[variables('omsStorageAccountKey')]"
          }
        }
      }
    }
  ]
}
